# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Hub Movies - Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: git fetch --no-tags --prune --depth=5 origin master

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-npm-${{ hashFiles('./package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          HUSKY_SKIP_INSTALL: 'true'
        run: npm install
      - name: Lint Application
        run: npm run ng lint

      - name: Test Application
        run: npm run ng test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

      - name: Build Application
        run: npm run ng build -- --configuration production --stats-json

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist--hub-movies
          path: |
            dist/hub-movies

      - name: Archive bundle-report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bundle-report--hub-movies
          path: dist/hub-movies/stats.json
      - name: Run lighthouse ci report
        run: npm run lhci -- autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Archive lighthouse ci artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lhci--hub-movies
          path: |
            .lighthouseci

      - uses: tzkhan/pr-update-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          head-branch-regex: '.+'
          body-template: "[PR LHCI report](https://???/${{ github.head_ref }}/.lighthouseci/report.html) | [Compare to master](https://???/.lighthouseci/report.html)"
          body-update-action: 'suffix'
